name: Pawtograder
description:
  An action for automatically submitting and grading student coding submissions
author: Jonathan Bell <jon@jonbell.net>

branding:
  icon: heart
  color: red

inputs:
  grading_server:
    description: URL of the grading API server, e.g. https://api.pawtograder.com
    required: true
  handout_repo:
    description:
      The name of the handout repo, e.g. khoury-classroom/handout-template. This
      is only used to check if the action is being run in the handout repo, and
      if so, no submission will be created (so your handout built can still be
      green).
    required: false
  regression_test_job:
    description: The ID of the Pawtograder regression test job to run
    required: false
  action_ref:
    description: The ref of the action, e.g. github.action_ref
    required: true
  action_repository:
    description: The repository of the action, e.g.  github.action_repository
    required: true

outputs:
  score:
    description: The score of the submission
    value: ${{ steps.grade.outputs.score }}

runs:
  using: 'composite'
  steps:
    - name: Check out action repo
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.action_repository }}
        ref: ${{ inputs.action_ref }}
        path: action

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'
        cache-dependency-path: action/package-lock.json

    - name: Diagnostics
      shell: bash
      run: |
        echo "### Shell:"
        echo "$SHELL"
        echo

        echo "### System info:"
        uname -a
        echo

        echo "### CPU:"
        lscpu || echo "lscpu not available"
        echo

        echo "### Memory:"
        free -h || echo "free not available"
        echo

        echo "### Installed packages:"
        dpkg -l | head -n 20 || echo "dpkg not available or truncated"
        echo

        echo "### PATH:"
        echo "$PATH" | tr ':' '\n'
        echo

        echo "### Node version:"
        node --version || echo "node not installed"
        npm --version || echo "npm not installed"
        echo

        echo "### Working directory:"
        pwd
        ls -lah
        echo

        echo "### Environment variables:"
        env | sort
    - name: Check if `make` is available
      shell: bash
      run: |
        if command -v make >/dev/null 2>&1; then
          echo "✅ make is already installed"
          make --version
        else
          echo "❌ make not found; installing..."
          sudo apt-get update && sudo apt-get install -y make
        fi
    - name: Install Make
      run: sudo apt-get update && sudo apt-get install -y make
      shell: bash
      working-directory: action

    - name: Install dependencies
      run: npm ci
      shell: bash
      working-directory: action

    # - name: Cache built Pyret file
    #   id: cache-pyret
    #   uses: actions/cache@v4
    #   with:
    #     path: action/pyret/main.cjs
    #     key: pyret-${{ hashFiles('action/pyret/main.arr', 'action/package-lock.json') }}

    - name: Build Pyret
      run:
        npx pyret --builtin-js-dir node_modules/pyret-lang/src/js/trove/
        --program pyret/main.arr --outfile pyret/main.cjs --no-check-mode
        --quiet --norun
      shell: bash
      working-directory: action

    - name: Run the autograder
      id: grade
      run: node --enable-source-maps dist/index.js
      shell: bash
      working-directory: action
      env:
        GRADING_SERVER: ${{ inputs.grading_server }}
        HANDOUT_REPO: ${{ inputs.handout_repo }}
        REGRESSION_TEST_JOB: ${{ inputs.regression_test_job }}
        ACTION_REF: ${{ inputs.action_ref }}
        ACTION_REPOSITORY: ${{ inputs.action_repository }}
