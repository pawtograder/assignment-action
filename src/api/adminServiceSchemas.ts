/**
 * Generated by @openapi-codegen
 *
 * @version 0.0.1
 */
export type SubmissionResponse = {
  grader_sha: string
  grader_url: string
  error?: {
    message: string
    recoverable: boolean
    details: string
  }
}

export type RegressionTestRunResponse = {
  regression_test_sha: string
  regression_test_url: string
  error?: {
    message: string
    recoverable: boolean
    details: string
  }
}

export type GradeResponse = {
  details_url: string
  message: string
  is_ok: boolean
  artifacts?: {
    name: string
    token: string
    path: string
  }[]
  supabase_url: string
  supabase_anon_key: string
  error?: {
    message: string
    recoverable: boolean
    details: string
  }
}

export type OutputFormat = 'text' | 'markdown' | 'ansi'
export type OutputVisibility =
  | 'hidden' // Never shown to students
  | 'visible' // Always shown to students
  | 'after_due_date' // Shown to students after the due date
  | 'after_published' // Shown to students after grades are published

export type AutograderFeedback = {
  score?: number
  max_score?: number
  output: {
    [key in OutputVisibility]?: {
      output: string
      output_format?: OutputFormat
    }
  }
  lint: {
    status: 'pass' | 'fail'
    output: string
    output_format?: OutputFormat
  }
  tests: {
    score?: number
    max_score?: number
    name: string
    name_format?: OutputFormat
    output: string
    output_format?: OutputFormat
    hidden_output?: string
    hidden_output_format?: OutputFormat
    part?: string
    hide_until_released?: boolean
    extra_data?: any
    hidden_extra_data?: any
  }[]
  artifacts?: {
    name: string
    path: string // Local path in the grader container
    data?: object
  }[]
  annotations?: (
    | FeedbackComment
    | FeedbackLineComment
    | FeedbackArtifactComment
  )[]
}

export type FeedbackComment = {
  author: {
    name: string
    avatar_url: string
    flair?: string
    flair_color?: string
  }
  message: string
  points?: number
  rubric_check_id?: number
  released: boolean
}
export type FeedbackLineComment = FeedbackComment & {
  line: number
  file_name: string
}
export type FeedbackArtifactComment = FeedbackComment & {
  artifact_name: string
}

export type GradingScriptResult = {
  /** @format double */
  ret_code: number
  output: string
  /** @format double */
  execution_time: number
  feedback: AutograderFeedback
  grader_sha: string
  action_ref: string
  action_repository: string
  regression_test_repo?: string
  errors?: {
    name: string
    data: any
    is_private: boolean
  }[]
}

export type Calendar = {
  ics: string
}

export type Grades = {
  html_url: string
  current_grade: any | null
  /**
   * @format double
   */
  current_score: number
  final_grade: any | null
  /**
   * @format double
   */
  final_score: number
  /**
   * @format double
   */
  unposted_current_score: number
  unposted_current_grade: any | null
  /**
   * @format double
   */
  unposted_final_score: number
  unposted_final_grade: any | null
}

export type User = {
  /**
   * @format double
   */
  id: number
  name: string
  /**
   * @format date-time
   */
  created_at: string
  sortable_name: string
  short_name: string
  sis_user_id: string
  integration_id: any | null
  login_id: string
}

export type Enrollment = {
  /**
   * @format double
   */
  id: number
  /**
   * @format double
   */
  user_id: number
  /**
   * @format double
   */
  course_id: number
  type: string
  /**
   * @format date-time
   */
  created_at: string
  /**
   * @format date-time
   */
  updated_at: string
  associated_user_id: any | null
  start_at: any | null
  end_at: any | null
  /**
   * @format double
   */
  course_section_id: number
  /**
   * @format double
   */
  root_account_id: number
  limit_privileges_to_course_section: boolean
  enrollment_state: string
  role: string
  /**
   * @format double
   */
  role_id: number
  /**
   * @format date-time
   */
  last_activity_at: string
  last_attended_at: any | null
  /**
   * @format double
   */
  total_activity_time: number
  grades: Grades
  sis_account_id: string
  sis_course_id: string
  course_integration_id: any | null
  sis_section_id: string
  section_integration_id: any | null
  sis_user_id: string
  html_url: string
  user: User
}

export type Course = {
  /**
   * @format double
   */
  id: number
  name: string
  /**
   * @format double
   */
  account_id: number
  uuid: string
  start_at: any | null
  grading_standard_id: any | null
  is_public: boolean
  /**
   * @format date-time
   */
  created_at: string
  course_code: string
  default_view: string
  /**
   * @format double
   */
  root_account_id: number
  /**
   * @format double
   */
  enrollment_term_id: number
  license: string
  grade_passback_setting: any | null
  /**
   * @format date-time
   */
  end_at: string
  public_syllabus: boolean
  public_syllabus_to_auth: boolean
  /**
   * @format double
   */
  storage_quota_mb: number
  is_public_to_auth_users: boolean
  homeroom_course: boolean
  course_color: any | null
  friendly_name: any | null
  apply_assignment_group_weights: boolean
  calendar: Calendar
  time_zone: string
  blueprint: boolean
  template: boolean
  sis_course_id: any | null
  integration_id: any | null
  enrollments: Enrollment[]
  hide_final_grades: boolean
  workflow_state: string
  restrict_enrollments_to_course_dates: boolean
}

export type FileListing = {
  sha: string
  /**
   * @format double
   */
  size: number
  path: string
  name: string
}

/**
 * <p>A set of endpoints used by clients to connect to the media service group for an Amazon Chime SDK meeting.</p>
 */
export type MediaPlacement = {
  /**
   * <p>The audio host URL.</p>
   */
  AudioHostUrl?: string
  /**
   * <p>The audio fallback URL.</p>
   */
  AudioFallbackUrl?: string
  /**
   * <p>The signaling URL.</p>
   */
  SignalingUrl?: string
  /**
   * <p>The turn control URL.</p>
   *          <important>
   *             <p>
   *                <b>This parameter is deprecated and no longer used by the Amazon Chime SDK.</b>
   *             </p>
   *          </important>
   */
  TurnControlUrl?: string
  /**
   * <p>The screen data URL.</p>
   *          <important>
   *             <p>
   *                <b>This parameter is deprecated and no longer used by the Amazon Chime SDK.</b>
   *             </p>
   *          </important>
   */
  ScreenDataUrl?: string
  /**
   * <p>The screen viewing URL.</p>
   *          <important>
   *             <p>
   *                <b>This parameter is deprecated and no longer used by the Amazon Chime SDK.</b>
   *             </p>
   *          </important>
   */
  ScreenViewingUrl?: string
  /**
   * <p>The screen sharing URL.</p>
   *          <important>
   *             <p>
   *                <b>This parameter is deprecated and no longer used by the Amazon Chime SDK.</b>
   *             </p>
   *          </important>
   */
  ScreenSharingUrl?: string
  /**
   * <p>The event ingestion URL.</p>
   */
  EventIngestionUrl?: string
}

export type MeetingFeatureStatus = 'AVAILABLE' | 'UNAVAILABLE'

/**
 * <p>An optional category of meeting features that contains audio-specific configurations, such as operating parameters for Amazon Voice Focus. </p>
 */
export type AudioFeatures = {
  /**
   * <p>Makes echo reduction available to clients who connect to the meeting.</p>
   */
  EchoReduction?: MeetingFeatureStatus
}

export type VideoResolution = 'FHD' | 'HD' | 'None'

/**
 * <p>The video features set for the meeting. Applies to all attendees.</p>
 *          <note>
 *             <p>If you specify <code>MeetingFeatures:Video:MaxResolution:None</code> when you create a meeting, all API requests
 *                 that include <code>SendReceive</code>, <code>Send</code>, or <code>Receive</code> for <code>AttendeeCapabilities:Video</code> will be rejected with <code>ValidationError 400</code>.</p>
 *          </note>
 */
export type VideoFeatures = {
  /**
   * <p>The maximum video resolution for the meeting. Applies to all attendees.</p>
   *          <note>
   *             <p>Defaults to <code>HD</code>. To use <code>FHD</code>, you must also provide a <code>MeetingFeatures:Attendee:MaxCount</code> value and override the default size
   *             limit of 250 attendees.</p>
   *          </note>
   */
  MaxResolution?: VideoResolution
}

export type ContentResolution = 'FHD' | 'None' | 'UHD'

/**
 * <p>Lists the content (screen share) features for the meeting. Applies to all attendees.</p>
 *          <note>
 *             <p>If you specify <code>MeetingFeatures:Content:MaxResolution:None</code> when you create a meeting, all API requests that include <code>SendReceive</code>, <code>Send</code>, or
 *                 <code>Receive</code> for <code>AttendeeCapabilities:Content</code> will be rejected with <code>ValidationError 400</code>.</p>
 *          </note>
 */
export type ContentFeatures = {
  /**
   * <p>The maximum resolution for the meeting content.</p>
   *          <note>
   *             <p>Defaults to <code>FHD</code>. To use <code>UHD</code>, you must also provide a <code>MeetingFeatures:Attendee:MaxCount</code>
   *          value and override the default size limit of 250 attendees.</p>
   *          </note>
   */
  MaxResolution?: ContentResolution
}

/**
 * <p>Lists the maximum number of attendees allowed into the meeting.</p>
 *          <note>
 *             <p>If you specify <code>FHD</code> for <code>MeetingFeatures:Video:MaxResolution</code>, or if you specify
 *            <code>UHD</code> for <code>MeetingFeatures:Content:MaxResolution</code>, the maximum number of attendees changes from the default of <code>250</code> to <code>25</code>.</p>
 *          </note>
 */
export type AttendeeFeatures = {
  /**
   * <p>The maximum number of attendees allowed into the meeting.</p>
   *
   * @format double
   */
  MaxCount?: number
}

/**
 * <p>The configuration settings of the features available to a meeting.</p>
 */
export type MeetingFeaturesConfiguration = {
  /**
   * <p>The configuration settings for the audio features available to a meeting.</p>
   */
  Audio?: AudioFeatures
  /**
   * <p>The configuration settings for the video features available to a meeting.</p>
   */
  Video?: VideoFeatures
  /**
   * <p>The configuration settings for the content features available to a meeting.</p>
   */
  Content?: ContentFeatures
  /**
   * <p>The configuration settings for the attendee features available to a meeting.</p>
   */
  Attendee?: AttendeeFeatures
}

/**
 * <p>A meeting created using the Amazon Chime SDK.</p>
 */
export type Meeting = {
  /**
   * <p>The Amazon Chime SDK meeting ID.</p>
   */
  MeetingId?: string
  /**
   * <p>Reserved.</p>
   */
  MeetingHostId?: string
  /**
   * <p>The external meeting ID.</p>
   *          <p>Pattern: <code>[-_&@+=,()\{\}\[\]\/«».:|'"#a-zA-Z0-9À-ÿ\s]*</code>
   *          </p>
   *          <p>Values that begin with <code>aws:</code> are reserved. You can't configure a value that uses this prefix.
   *             Case insensitive.</p>
   */
  ExternalMeetingId?: string
  /**
   * <p>The Region in which you create the meeting. Available values: <code>af-south-1</code>, <code>ap-northeast-1</code>,
   *             <code>ap-northeast-2</code>, <code>ap-south-1</code>, <code>ap-southeast-1</code>, <code>ap-southeast-2</code>, <code>ca-central-1</code>,
   *             <code>eu-central-1</code>, <code>eu-north-1</code>, <code>eu-south-1</code>,
   *             <code>eu-west-1</code>, <code>eu-west-2</code>, <code>eu-west-3</code>,
   *             <code>sa-east-1</code>, <code>us-east-1</code>, <code>us-east-2</code>,
   *             <code>us-west-1</code>, <code>us-west-2</code>.</p>
   *          <p>Available values in Amazon Web Services GovCloud (US) Regions: <code>us-gov-east-1</code>, <code>us-gov-west-1</code>.</p>
   */
  MediaRegion?: string
  /**
   * <p>The media placement for the meeting.</p>
   */
  MediaPlacement?: MediaPlacement
  /**
   * <p>The features available to a meeting, such as echo reduction.</p>
   */
  MeetingFeatures?: MeetingFeaturesConfiguration
  /**
   * <p>When specified, replicates the media from the primary meeting to this meeting.</p>
   */
  PrimaryMeetingId?: string
  /**
   * <p>Array of strings.</p>
   */
  TenantIds?: string[]
  /**
   * <p>The ARN of the meeting.</p>
   */
  MeetingArn?: string
}

export type ResponseMetadata = {
  /**
   * The status code of the last HTTP response received for this operation.
   *
   * @format double
   */
  httpStatusCode?: number
  /**
   * A unique identifier for the last request sent for this operation. Often
   * requested by AWS service teams to aid in debugging.
   */
  requestId?: string
  /**
   * A secondary identifier for the last request sent. Used for debugging.
   */
  extendedRequestId?: string
  /**
   * A tertiary identifier for the last request sent. Used for debugging.
   */
  cfId?: string
  /**
   * The number of times this operation was attempted.
   *
   * @format double
   */
  attempts?: number
  /**
   * The total amount of time (in milliseconds) that was spent waiting between
   * retry attempts.
   *
   * @format double
   */
  totalRetryDelay?: number
}

export type CreateMeetingCommandOutput = {
  /**
   * <p>The meeting information, including the meeting ID and
   *            <code>MediaPlacement</code>.</p>
   */
  Meeting?: Meeting
  /**
   * Metadata pertaining to this request.
   */
  $metadata: ResponseMetadata
}

export type MediaCapabilities = 'None' | 'Receive' | 'Send' | 'SendReceive'

/**
 * <p>The media capabilities of an attendee: audio, video, or content.</p>
 *          <note>
 *             <p>You use the capabilities with a set of values that control what the capabilities can do, such as <code>SendReceive</code> data. For more information, refer to
 *              and .</p>
 *          </note>
 *          <p>When using capabilities, be aware of these corner cases:</p>
 *          <ul>
 *             <li>
 *                <p>If you specify <code>MeetingFeatures:Video:MaxResolution:None</code> when you create a meeting, all API requests
 *                     that include <code>SendReceive</code>, <code>Send</code>, or <code>Receive</code> for <code>AttendeeCapabilities:Video</code> will be rejected with <code>ValidationError 400</code>.</p>
 *             </li>
 *             <li>
 *                <p>If you specify <code>MeetingFeatures:Content:MaxResolution:None</code> when you create a meeting, all API requests that include <code>SendReceive</code>, <code>Send</code>, or
 *                     <code>Receive</code> for <code>AttendeeCapabilities:Content</code> will be rejected with <code>ValidationError 400</code>.</p>
 *             </li>
 *             <li>
 *                <p>You can't set <code>content</code> capabilities to <code>SendReceive</code> or <code>Receive</code> unless you also set <code>video</code> capabilities to <code>SendReceive</code>
 *                     or <code>Receive</code>. If you don't set the <code>video</code> capability to receive, the response will contain an HTTP 400 Bad Request status code. However, you can set your
 *                     <code>video</code> capability to receive and you set your <code>content</code> capability to not receive.</p>
 *             </li>
 *             <li>
 *                <p>When you change an <code>audio</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
 *                     and an attendee unmutes their microphone, audio flows from the attendee to the other meeting participants.</p>
 *             </li>
 *             <li>
 *                <p>When you change a <code>video</code> or <code>content</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
 *                     and the attendee turns on their video or content streams, remote attendees can receive those streams, but only after media renegotiation between the client and the Amazon Chime back-end server.</p>
 *             </li>
 *          </ul>
 */
export type AttendeeCapabilities = {
  /**
   * <p>The audio capability assigned to an attendee.</p>
   */
  Audio?: MediaCapabilities
  /**
   * <p>The video capability assigned to an attendee.</p>
   */
  Video?: MediaCapabilities
  /**
   * <p>The content capability assigned to an attendee.</p>
   */
  Content?: MediaCapabilities
}

/**
 * <p>An Amazon Chime SDK meeting attendee. Includes a unique
 *            <code>AttendeeId</code> and <code>JoinToken</code>. The
 *            <code>JoinToken</code>
 *            allows a client to authenticate and join as the specified attendee. The
 *            <code>JoinToken</code>
 *            expires when the meeting ends, or when
 *            <a>DeleteAttendee</a>
 *            is called. After that, the attendee is unable to join the meeting.
 *        </p>
 *          <p>We recommend securely transferring each <code>JoinToken</code> from your server application
 *            to the client so that no other client has access to the token except for the one
 *            authorized to represent the attendee.</p>
 */
export type Attendee = {
  /**
   * <p>The Amazon Chime SDK external user ID. An idempotency token. Links the attendee to an identity managed by a builder application.</p>
   *          <p>Pattern: <code>[-_&@+=,()\{\}\[\]\/«».:|'"#a-zA-Z0-9À-ÿ\s]*</code>
   *          </p>
   *          <p>Values that begin with <code>aws:</code> are reserved. You can't configure a value that uses this prefix.
   *             Case insensitive.</p>
   */
  ExternalUserId?: string
  /**
   * <p>The Amazon Chime SDK attendee ID.</p>
   */
  AttendeeId?: string
  /**
   * <p>The join token used by the Amazon Chime SDK attendee.</p>
   */
  JoinToken?: string
  /**
   * <p>The capabilities assigned to an attendee: audio, video, or content.</p>
   *          <note>
   *             <p>You use the capabilities with a set of values that control what the capabilities can do, such as <code>SendReceive</code> data. For more information about those values, see
   *             .</p>
   *          </note>
   *          <p>When using capabilities, be aware of these corner cases:</p>
   *          <ul>
   *             <li>
   *                <p>If you specify <code>MeetingFeatures:Video:MaxResolution:None</code> when you create a meeting, all API requests
   *                     that include <code>SendReceive</code>, <code>Send</code>, or <code>Receive</code> for <code>AttendeeCapabilities:Video</code> will be rejected with <code>ValidationError 400</code>.</p>
   *             </li>
   *             <li>
   *                <p>If you specify <code>MeetingFeatures:Content:MaxResolution:None</code> when you create a meeting, all API requests that include <code>SendReceive</code>, <code>Send</code>, or
   *                     <code>Receive</code> for <code>AttendeeCapabilities:Content</code> will be rejected with <code>ValidationError 400</code>.</p>
   *             </li>
   *             <li>
   *                <p>You can't set <code>content</code> capabilities to <code>SendReceive</code> or <code>Receive</code> unless you also set <code>video</code> capabilities to <code>SendReceive</code>
   *                     or <code>Receive</code>. If you don't set the <code>video</code> capability to receive, the response will contain an HTTP 400 Bad Request status code. However, you can set your <code>video</code> capability
   *                     to receive and you set your <code>content</code> capability to not receive.</p>
   *             </li>
   *             <li>
   *                <p>When you change an <code>audio</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
   *                     and if the attendee left their microphone unmuted, audio will flow from the attendee to the other meeting participants.</p>
   *             </li>
   *             <li>
   *                <p>When you change a <code>video</code> or <code>content</code> capability from <code>None</code> or <code>Receive</code> to <code>Send</code> or <code>SendReceive</code> ,
   *                     and if the attendee turned on their video or content streams, remote attendees can receive those streams, but only after media renegotiation between the client and the Amazon Chime back-end server.</p>
   *             </li>
   *          </ul>
   */
  Capabilities?: AttendeeCapabilities
}

export type CreateAttendeeCommandOutput = {
  /**
   * <p>The attendee information, including attendee ID and join token.</p>
   */
  Attendee?: Attendee
  /**
   * Metadata pertaining to this request.
   */
  $metadata: ResponseMetadata
}

export type JoinMeetingResponse = {
  Attendee: CreateAttendeeCommandOutput
  Meeting: CreateMeetingCommandOutput
}
