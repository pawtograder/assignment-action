import { readFile } from 'fs/promises';
import { parse } from 'csv-parse/sync';
export async function parseJacocoCsv(file) {
    const coverageReport = await readFile(file, 'utf8');
    const records = parse(coverageReport, {
        columns: true,
        skip_empty_lines: true
    });
    return records;
}
export function getCoverageSummary(records) {
    const totalBranches = records.reduce((acc, record) => acc + parseInt(record.BRANCH_COVERED), 0);
    const totalBranchesMissed = records.reduce((acc, record) => acc + parseInt(record.BRANCH_MISSED), 0);
    return (`Overall branch coverage: ${totalBranches} / ${totalBranches + totalBranchesMissed} (${((totalBranches / (totalBranches + totalBranchesMissed)) * 100).toFixed(2)}%)\n` +
        '\n\n' +
        records
            .filter((r) => parseInt(r.BRANCH_COVERED) + parseInt(r.BRANCH_MISSED) > 0)
            .map((r) => ` * ${r.PACKAGE}.${r.CLASS}: ${r.BRANCH_COVERED} / ${r.BRANCH_COVERED + r.BRANCH_MISSED} (${((parseInt(r.BRANCH_COVERED) / (parseInt(r.BRANCH_COVERED) + parseInt(r.BRANCH_MISSED))) * 100).toFixed(2)}%)`)
            .join('\n'));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiamFjb2NvLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9zbWFyYW50L0RvY3VtZW50cy9Vbml2ZXJzaXR5IHN0dWZmL1N1bW1lci0yMDI1L0NvdXJzZSBEZXYvYXNzaWdubWVudC1hY3Rpb24vIiwic291cmNlcyI6WyJzcmMvZ3JhZGluZy9idWlsZGVycy9qYWNvY28udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGFBQWEsQ0FBQTtBQUN0QyxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sZ0JBQWdCLENBQUE7QUFnQnRDLE1BQU0sQ0FBQyxLQUFLLFVBQVUsY0FBYyxDQUFDLElBQVk7SUFDL0MsTUFBTSxjQUFjLEdBQUcsTUFBTSxRQUFRLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFBO0lBQ25ELE1BQU0sT0FBTyxHQUFHLEtBQUssQ0FBQyxjQUFjLEVBQUU7UUFDcEMsT0FBTyxFQUFFLElBQUk7UUFDYixnQkFBZ0IsRUFBRSxJQUFJO0tBQ3ZCLENBQUMsQ0FBQTtJQUNGLE9BQU8sT0FBNEIsQ0FBQTtBQUNyQyxDQUFDO0FBQ0QsTUFBTSxVQUFVLGtCQUFrQixDQUFDLE9BQTBCO0lBQzNELE1BQU0sYUFBYSxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQ2xDLENBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxFQUFFLENBQUMsR0FBRyxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLEVBQ3RELENBQUMsQ0FDRixDQUFBO0lBQ0QsTUFBTSxtQkFBbUIsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUN4QyxDQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsRUFBRSxDQUFDLEdBQUcsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxFQUNyRCxDQUFDLENBQ0YsQ0FBQTtJQUNELE9BQU8sQ0FDTCw0QkFBNEIsYUFBYSxNQUFNLGFBQWEsR0FBRyxtQkFBbUIsS0FBSyxDQUFDLENBQUMsYUFBYSxHQUFHLENBQUMsYUFBYSxHQUFHLG1CQUFtQixDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU07UUFDdkssTUFBTTtRQUNOLE9BQU87YUFDSixNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUM7YUFDekUsR0FBRyxDQUNGLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FDSixNQUFNLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsY0FBYyxNQUFNLENBQUMsQ0FBQyxjQUFjLEdBQUcsQ0FBQyxDQUFDLGFBQWEsS0FBSyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQzdNO2FBQ0EsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUNkLENBQUE7QUFDSCxDQUFDIn0=